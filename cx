#!/bin/zsh

src=
opt=

out_file=./a.out

while [ "$1" != "" ] ; do
	if [ ${1:0:1} = "-" ] ; then
		opt="${opt}"\ "$1"
	else
		src="${src}"\ "$1"
	fi
	shift
done

# eval expand ${opt}
eval cc ${opt} -lm -xc -o ${out_file} <( cat << EOT
	#include <stdio.h>
	#include <stdlib.h>
	#include <math.h>

	#define p printf
	#define pd(n) printf("%d\n", n);
	#define pf(n) printf("%f\n", n);
	#define px(n) printf("%x\n", n);
	#define pa(n) printf("%a\n", n);
	#define pp(n) printf("%p\n", n);

	#define fori(n) int i; for(i=0; i<n; i++)
	#define forj(n) int j; for(j=0; j<n; j++)
	#define fork(n) int k; for(k=0; k<n; k++)

	typedef unsigned char  uchar;
	typedef unsigned short ushort;
	typedef unsigned int   uint;
	typedef unsigned long  ulong;

	int main(int argc, const char *argv[])
	{
		${src};
		return 0;
	}
EOT
) && ${out_file} && rm ${out_file}
